library(Seurat)
library(ggplot2)
library(dplyr)
library(SingleCellExperiment)
library(DoubletFinder)
library(monocle3)



# Load the  dataset

prefix = getwd()

ctr_1.data <- Read10X(data.dir = paste0(prefix, "/t47d_ctr_1"))
ctr_1 <- CreateSeuratObject(counts = ctr_1.data, project = "T47D_CTR_1", min.cells = 3, min.features = 200)


ctr_2.data <- Read10X(data.dir = paste0(prefix, "/t47d_ctr_2"))
ctr_2 <- CreateSeuratObject(counts = ctr_2.data, project = "T47D_CTR_2", min.cells = 3, min.features = 200)


t47d_tis_1.data <- Read10X(data.dir = paste0(prefix, "/t47d_tis_1"))
t47d_tis_1 <- CreateSeuratObject(counts = t47d_tis_1.data, project = "T47D_TIS_1", min.cells = 3, min.features = 200)


t47d_tis_2.data <- Read10X(data.dir = paste0(prefix, "/t47d_tis_2"))
t47d_tis_2 <- CreateSeuratObject(counts = t47d_tis_2.data, project = "T47D_TIS_2", min.cells = 3, min.features = 200)


t47d_repop_1.data <- Read10X(data.dir = paste0(prefix, "/t47d_repop_1"))
t47d_repop_1 <- CreateSeuratObject(counts = t47d_repop_1.data, project = "T47D_REPOP_1", min.cells = 3, min.features = 200)


t47d_repop_2.data <- Read10X(data.dir = paste0(prefix, "/t47d_repop_2"))
t47d_repop_2 <- CreateSeuratObject(counts = t47d_repop_2.data, project = "T47D_REPOP_2", min.cells = 3, min.features = 200)




# Doublet detection and removal 


# Control 1 

sen_pre.seurat = ctr_1
sen_pre.seurat$mitoPercent <- PercentageFeatureSet(sen_pre.seurat, pattern = '^MT-')

sen_pre.seurat.filtered <- subset(sen_pre.seurat, subset = nCount_RNA > 800 &
                                    nFeature_RNA > 500 &
                                    mitoPercent < 10)


# pre-process standard workflow
sen_pre.seurat.filtered <- NormalizeData(object = sen_pre.seurat.filtered)
sen_pre.seurat.filtered <- FindVariableFeatures(object = sen_pre.seurat.filtered)
sen_pre.seurat.filtered <- ScaleData(object = sen_pre.seurat.filtered)
sen_pre.seurat.filtered <- RunPCA(object = sen_pre.seurat.filtered)
ElbowPlot(sen_pre.seurat.filtered)

sen_pre.seurat.filtered <- FindNeighbors(object = sen_pre.seurat.filtered, dims = 1:16)
sen_pre.seurat.filtered <- FindClusters(object = sen_pre.seurat.filtered)
sen_pre.seurat.filtered <- RunUMAP(object = sen_pre.seurat.filtered, dims = 1:16)

DimPlot(sen_pre.seurat.filtered, reduction = "umap")


## pK Identification (no ground-truth) ---------------------------------------------------------------------------------------
sweep.res.list_sen_pre <- paramSweep(sen_pre.seurat.filtered, PCs = 1:16, sct = FALSE)
sweep.stats_sen_pre <- summarizeSweep(sweep.res.list_sen_pre, GT = FALSE)
bcmvn_sen_pre <- find.pK(sweep.stats_sen_pre)

ggplot(bcmvn_sen_pre, aes(pK, BCmetric, group = 1)) +
  geom_point() +
  geom_line()

pK <- bcmvn_sen_pre %>% # select the pK that corresponds to max bcmvn to optimize doublet detection
  filter(BCmetric == max(BCmetric)) %>%
  select(pK) 
pK <- as.numeric(as.character(pK[[1]]))


## Homotypic Doublet Proportion Estimate -------------------------------------------------------------------------------------
annotations <- sen_pre.seurat.filtered@meta.data$seurat_clusters
homotypic.prop <- modelHomotypic(annotations)          
nExp_poi <- round(0.076*nrow(sen_pre.seurat.filtered@meta.data))  ## Assuming 7.5% doublet formation rate - tailor for your dataset
nExp_poi.adj <- round(nExp_poi*(1-homotypic.prop))


# run doubletFinder 
sen_pre.seurat.filtered <- doubletFinder(sen_pre.seurat.filtered, 
                                         PCs = 1:16, 
                                         pN = 0.25, 
                                         pK = pK, 
                                         nExp = nExp_poi.adj,
                                         reuse.pANN = FALSE, sct = FALSE)


# visualize doublets
DimPlot(sen_pre.seurat.filtered, reduction = 'umap', group.by = "DF.classifications_0.25_0.3_387")

# number of singlets and doublets
table(sen_pre.seurat.filtered@meta.data$DF.classifications_0.25_0.3_387)

idx <- which(sen_pre.seurat.filtered$DF.classifications_0.25_0.3_387 == 'Doublet')
n_d_ctr1 = length(idx)
sen_pre.seurat.filtered_doublet <- sen_pre.seurat.filtered[,idx]
cells.doublet <- colnames(sen_pre.seurat.filtered_doublet)

idx_d <- which(colnames(ctr_1) %in% cells.doublet)
ctr_1_nodoublets <- ctr_1[,-idx_d]
ctr_1_nodoublets

# Control 2 

sen_pre.seurat = ctr_2
sen_pre.seurat$mitoPercent <- PercentageFeatureSet(sen_pre.seurat, pattern = '^MT-')

sen_pre.seurat.filtered <- subset(sen_pre.seurat, subset = nCount_RNA > 800 &
                                    nFeature_RNA > 500 &
                                    mitoPercent < 10)

sen_pre.seurat.filtered

# pre-process standard workflow
sen_pre.seurat.filtered <- NormalizeData(object = sen_pre.seurat.filtered)
sen_pre.seurat.filtered <- FindVariableFeatures(object = sen_pre.seurat.filtered)
sen_pre.seurat.filtered <- ScaleData(object = sen_pre.seurat.filtered)
sen_pre.seurat.filtered <- RunPCA(object = sen_pre.seurat.filtered)
ElbowPlot(sen_pre.seurat.filtered)

sen_pre.seurat.filtered <- FindNeighbors(object = sen_pre.seurat.filtered, dims = 1:17)
sen_pre.seurat.filtered <- FindClusters(object = sen_pre.seurat.filtered)
sen_pre.seurat.filtered <- RunUMAP(object = sen_pre.seurat.filtered, dims = 1:17)

DimPlot(sen_pre.seurat.filtered, reduction = "umap")

## pK Identification (no ground-truth) ---------------------------------------------------------------------------------------
sweep.res.list_sen_pre <- paramSweep(sen_pre.seurat.filtered, PCs = 1:17, sct = FALSE)
sweep.stats_sen_pre <- summarizeSweep(sweep.res.list_sen_pre, GT = FALSE)
bcmvn_sen_pre <- find.pK(sweep.stats_sen_pre)

ggplot(bcmvn_sen_pre, aes(pK, BCmetric, group = 1)) +
  geom_point() +
  geom_line()

pK <- bcmvn_sen_pre %>% # select the pK that corresponds to max bcmvn to optimize doublet detection
  filter(BCmetric == max(BCmetric)) %>%
  select(pK) 
pK <- as.numeric(as.character(pK[[1]]))


## Homotypic Doublet Proportion Estimate -------------------------------------------------------------------------------------
annotations <- sen_pre.seurat.filtered@meta.data$seurat_clusters
homotypic.prop <- modelHomotypic(annotations)           
nExp_poi <- round(0.076*nrow(sen_pre.seurat.filtered@meta.data))  ## Assuming 7.5% doublet formation rate - tailor for your dataset
nExp_poi.adj <- round(nExp_poi*(1-homotypic.prop))


# run doubletFinder 
sen_pre.seurat.filtered <- doubletFinder(sen_pre.seurat.filtered, 
                                         PCs = 1:17, 
                                         pN = 0.25, 
                                         pK = pK, 
                                         nExp = nExp_poi.adj,
                                         reuse.pANN = FALSE, sct = FALSE)


# visualize doublets
DimPlot(sen_pre.seurat.filtered, reduction = 'umap', group.by = "DF.classifications_0.25_0.3_344")

# number of singlets and doublets
table(sen_pre.seurat.filtered@meta.data$DF.classifications_0.25_0.3_344)

idx <- which(sen_pre.seurat.filtered$DF.classifications_0.25_0.3_344 == 'Doublet')
n_d_ctr2 = length(idx)
sen_pre.seurat.filtered_doublet <- sen_pre.seurat.filtered[,idx]
cells.doublet <- colnames(sen_pre.seurat.filtered_doublet)

idx_d <- which(colnames(ctr_2) %in% cells.doublet)
ctr_2_nodoublets <- ctr_2[,-idx_d]
ctr_2_nodoublets

# t47d_tis_1

sen_pre.seurat = t47d_tis_1
sen_pre.seurat$mitoPercent <- PercentageFeatureSet(sen_pre.seurat, pattern = '^MT-')

sen_pre.seurat.filtered <- subset(sen_pre.seurat, subset = nCount_RNA > 800 &
                                    nFeature_RNA > 500 &
                                    mitoPercent < 10)

sen_pre.seurat.filtered

# pre-process standard workflow
sen_pre.seurat.filtered <- NormalizeData(object = sen_pre.seurat.filtered)
sen_pre.seurat.filtered <- FindVariableFeatures(object = sen_pre.seurat.filtered)
sen_pre.seurat.filtered <- ScaleData(object = sen_pre.seurat.filtered)
sen_pre.seurat.filtered <- RunPCA(object = sen_pre.seurat.filtered)
ElbowPlot(sen_pre.seurat.filtered)

sen_pre.seurat.filtered <- FindNeighbors(object = sen_pre.seurat.filtered, dims = 1:12)
sen_pre.seurat.filtered <- FindClusters(object = sen_pre.seurat.filtered)
sen_pre.seurat.filtered <- RunUMAP(object = sen_pre.seurat.filtered, dims = 1:12)

DimPlot(sen_pre.seurat.filtered, reduction = "umap")

## pK Identification (no ground-truth) ---------------------------------------------------------------------------------------
sweep.res.list_sen_pre <- paramSweep(sen_pre.seurat.filtered, PCs = 1:12, sct = FALSE)
sweep.stats_sen_pre <- summarizeSweep(sweep.res.list_sen_pre, GT = FALSE)
bcmvn_sen_pre <- find.pK(sweep.stats_sen_pre)

ggplot(bcmvn_sen_pre, aes(pK, BCmetric, group = 1)) +
  geom_point() +
  geom_line()

pK <- bcmvn_sen_pre %>% # select the pK that corresponds to max bcmvn to optimize doublet detection
  filter(BCmetric == max(BCmetric)) %>%
  select(pK) 
pK <- as.numeric(as.character(pK[[1]]))


## Homotypic Doublet Proportion Estimate -------------------------------------------------------------------------------------
annotations <- sen_pre.seurat.filtered@meta.data$seurat_clusters
homotypic.prop <- modelHomotypic(annotations)           
nExp_poi <- round(0.076*nrow(sen_pre.seurat.filtered@meta.data))  ## Assuming 7.5% doublet formation rate - tailor for your dataset
nExp_poi.adj <- round(nExp_poi*(1-homotypic.prop))


# run doubletFinder 
sen_pre.seurat.filtered <- doubletFinder(sen_pre.seurat.filtered, 
                                         PCs = 1:12, 
                                         pN = 0.25, 
                                         pK = pK, 
                                         nExp = nExp_poi.adj,
                                         reuse.pANN = FALSE, sct = FALSE)


# visualize doublets
DimPlot(sen_pre.seurat.filtered, reduction = 'umap', group.by = "DF.classifications_0.25_0.18_987")


idx <- which(sen_pre.seurat.filtered$DF.classifications_0.25_0.18_987 == 'Doublet')
n_d_sen1 = length(idx)
sen_pre.seurat.filtered_doublet <- sen_pre.seurat.filtered[,idx]
cells.doublet <- colnames(sen_pre.seurat.filtered_doublet)

idx_d <- which(colnames(t47d_tis_1) %in% cells.doublet)
t47d_tis_1_nodoublets <- t47d_tis_1[,-idx_d]
t47d_tis_1_nodoublets

# t47d_tis_2

sen_pre.seurat = t47d_tis_2
sen_pre.seurat$mitoPercent <- PercentageFeatureSet(sen_pre.seurat, pattern = '^MT-')

sen_pre.seurat.filtered <- subset(sen_pre.seurat, subset = nCount_RNA > 800 &
                                    nFeature_RNA > 500 &
                                    mitoPercent < 10)

sen_pre.seurat.filtered

# pre-process standard workflow
sen_pre.seurat.filtered <- NormalizeData(object = sen_pre.seurat.filtered)
sen_pre.seurat.filtered <- FindVariableFeatures(object = sen_pre.seurat.filtered)
sen_pre.seurat.filtered <- ScaleData(object = sen_pre.seurat.filtered)
sen_pre.seurat.filtered <- RunPCA(object = sen_pre.seurat.filtered)
ElbowPlot(sen_pre.seurat.filtered)

sen_pre.seurat.filtered <- FindNeighbors(object = sen_pre.seurat.filtered, dims = 1:15)
sen_pre.seurat.filtered <- FindClusters(object = sen_pre.seurat.filtered)
sen_pre.seurat.filtered <- RunUMAP(object = sen_pre.seurat.filtered, dims = 1:15)

DimPlot(sen_pre.seurat.filtered, reduction = "umap")

## pK Identification (no ground-truth) ---------------------------------------------------------------------------------------
sweep.res.list_sen_pre <- paramSweep(sen_pre.seurat.filtered, PCs = 1:15, sct = FALSE)
sweep.stats_sen_pre <- summarizeSweep(sweep.res.list_sen_pre, GT = FALSE)
bcmvn_sen_pre <- find.pK(sweep.stats_sen_pre)

ggplot(bcmvn_sen_pre, aes(pK, BCmetric, group = 1)) +
  geom_point() +
  geom_line()

pK <- bcmvn_sen_pre %>% # select the pK that corresponds to max bcmvn to optimize doublet detection
  filter(BCmetric == max(BCmetric)) %>%
  select(pK) 
pK <- as.numeric(as.character(pK[[1]]))


## Homotypic Doublet Proportion Estimate -------------------------------------------------------------------------------------
annotations <- sen_pre.seurat.filtered@meta.data$seurat_clusters
homotypic.prop <- modelHomotypic(annotations)           
nExp_poi <- round(0.076*nrow(sen_pre.seurat.filtered@meta.data))  ## Assuming 7.5% doublet formation rate - tailor for your dataset
nExp_poi.adj <- round(nExp_poi*(1-homotypic.prop))


# run doubletFinder 
sen_pre.seurat.filtered <- doubletFinder(sen_pre.seurat.filtered, 
                                         PCs = 1:15, 
                                         pN = 0.25, 
                                         pK = pK, 
                                         nExp = nExp_poi.adj,
                                         reuse.pANN = FALSE, sct = FALSE)


# visualize doublets
DimPlot(sen_pre.seurat.filtered, reduction = 'umap', group.by = "DF.classifications_0.25_0.04_717")


idx <- which(sen_pre.seurat.filtered$DF.classifications_0.25_0.04_717 == 'Doublet')
n_d_sen2 = length(idx)
sen_pre.seurat.filtered_doublet <- sen_pre.seurat.filtered[,idx]
#table(sen_pre.seurat.filtered_doublet@meta.data$DF.classifications_0.25_0.28_370)
cells.doublet <- colnames(sen_pre.seurat.filtered_doublet)

idx_d <- which(colnames(t47d_tis_2) %in% cells.doublet)
t47d_tis_2_nodoublets <- t47d_tis_2[,-idx_d]
t47d_tis_2_nodoublets

# t47d_repop_1

sen_pre.seurat = t47d_repop_1
sen_pre.seurat$mitoPercent <- PercentageFeatureSet(sen_pre.seurat, pattern = '^MT-')

sen_pre.seurat.filtered <- subset(sen_pre.seurat, subset = nCount_RNA > 800 &
                                    nFeature_RNA > 500 &
                                    mitoPercent < 10)

sen_pre.seurat.filtered

# pre-process standard workflow
sen_pre.seurat.filtered <- NormalizeData(object = sen_pre.seurat.filtered)
sen_pre.seurat.filtered <- FindVariableFeatures(object = sen_pre.seurat.filtered)
sen_pre.seurat.filtered <- ScaleData(object = sen_pre.seurat.filtered)
sen_pre.seurat.filtered <- RunPCA(object = sen_pre.seurat.filtered)
ElbowPlot(sen_pre.seurat.filtered)

sen_pre.seurat.filtered <- FindNeighbors(object = sen_pre.seurat.filtered, dims = 1:17)
sen_pre.seurat.filtered <- FindClusters(object = sen_pre.seurat.filtered)
sen_pre.seurat.filtered <- RunUMAP(object = sen_pre.seurat.filtered, dims = 1:17)

DimPlot(sen_pre.seurat.filtered, reduction = "umap")


## pK Identification (no ground-truth) ---------------------------------------------------------------------------------------
sweep.res.list_sen_pre <- paramSweep(sen_pre.seurat.filtered, PCs = 1:17, sct = FALSE)
sweep.stats_sen_pre <- summarizeSweep(sweep.res.list_sen_pre, GT = FALSE)
bcmvn_sen_pre <- find.pK(sweep.stats_sen_pre)

ggplot(bcmvn_sen_pre, aes(pK, BCmetric, group = 1)) +
  geom_point() +
  geom_line()

pK <- bcmvn_sen_pre %>% # select the pK that corresponds to max bcmvn to optimize doublet detection
  filter(BCmetric == max(BCmetric)) %>%
  select(pK) 
pK <- as.numeric(as.character(pK[[1]]))


## Homotypic Doublet Proportion Estimate -------------------------------------------------------------------------------------
annotations <- sen_pre.seurat.filtered@meta.data$seurat_clusters
homotypic.prop <- modelHomotypic(annotations)           
nExp_poi <- round(0.076*nrow(sen_pre.seurat.filtered@meta.data))  ## Assuming 7.5% doublet formation rate - tailor for your dataset
nExp_poi.adj <- round(nExp_poi*(1-homotypic.prop))


# run doubletFinder 
sen_pre.seurat.filtered <- doubletFinder(sen_pre.seurat.filtered, 
                                         PCs = 1:17, 
                                         pN = 0.25, 
                                         pK = pK, 
                                         nExp = nExp_poi.adj,
                                         reuse.pANN = FALSE, sct = FALSE)


# visualize doublets
DimPlot(sen_pre.seurat.filtered, reduction = 'umap', group.by = "DF.classifications_0.25_0.3_619")


# number of singlets and doublets
table(sen_pre.seurat.filtered@meta.data$DF.classifications_0.25_0.3_619)

idx <- which(sen_pre.seurat.filtered$DF.classifications_0.25_0.3_619 == 'Doublet')
n_d_repop1 = length(idx)
sen_pre.seurat.filtered_doublet <- sen_pre.seurat.filtered[,idx]
#table(sen_pre.seurat.filtered_doublet@meta.data$DF.classifications_0.25_0.28_370)
cells.doublet <- colnames(sen_pre.seurat.filtered_doublet)

idx_d <- which(colnames(t47d_repop_1) %in% cells.doublet)
t47d_repop_1_nodoublets <- t47d_repop_1[,-idx_d]
t47d_repop_1_nodoublets

# t47d_repop_2

sen_pre.seurat = t47d_repop_2
sen_pre.seurat$mitoPercent <- PercentageFeatureSet(sen_pre.seurat, pattern = '^MT-')

sen_pre.seurat.filtered <- subset(sen_pre.seurat, subset = nCount_RNA > 800 &
                                    nFeature_RNA > 500 &
                                    mitoPercent < 10)

sen_pre.seurat.filtered

# pre-process standard workflow
sen_pre.seurat.filtered <- NormalizeData(object = sen_pre.seurat.filtered)
sen_pre.seurat.filtered <- FindVariableFeatures(object = sen_pre.seurat.filtered)
sen_pre.seurat.filtered <- ScaleData(object = sen_pre.seurat.filtered)
sen_pre.seurat.filtered <- RunPCA(object = sen_pre.seurat.filtered)
ElbowPlot(sen_pre.seurat.filtered)


sen_pre.seurat.filtered <- FindNeighbors(object = sen_pre.seurat.filtered, dims = 1:17)
sen_pre.seurat.filtered <- FindClusters(object = sen_pre.seurat.filtered)
sen_pre.seurat.filtered <- RunUMAP(object = sen_pre.seurat.filtered, dims = 1:17)

DimPlot(sen_pre.seurat.filtered, reduction = "umap")


## pK Identification (no ground-truth) ---------------------------------------------------------------------------------------
sweep.res.list_sen_pre <- paramSweep(sen_pre.seurat.filtered, PCs = 1:17, sct = FALSE)
sweep.stats_sen_pre <- summarizeSweep(sweep.res.list_sen_pre, GT = FALSE)
bcmvn_sen_pre <- find.pK(sweep.stats_sen_pre)

ggplot(bcmvn_sen_pre, aes(pK, BCmetric, group = 1)) +
  geom_point() +
  geom_line()

pK <- bcmvn_sen_pre %>% # select the pK that corresponds to max bcmvn to optimize doublet detection
  filter(BCmetric == max(BCmetric)) %>%
  select(pK) 
pK <- as.numeric(as.character(pK[[1]]))


## Homotypic Doublet Proportion Estimate -------------------------------------------------------------------------------------
annotations <- sen_pre.seurat.filtered@meta.data$seurat_clusters
homotypic.prop <- modelHomotypic(annotations)           
nExp_poi <- round(0.076*nrow(sen_pre.seurat.filtered@meta.data))  ## Assuming 7.5% doublet formation rate - tailor for your dataset
nExp_poi.adj <- round(nExp_poi*(1-homotypic.prop))


# run doubletFinder 
sen_pre.seurat.filtered <- doubletFinder(sen_pre.seurat.filtered, 
                                         PCs = 1:17, 
                                         pN = 0.25, 
                                         pK = pK, 
                                         nExp = nExp_poi.adj,
                                         reuse.pANN = FALSE, sct = FALSE)


# visualize doublets
DimPlot(sen_pre.seurat.filtered, reduction = 'umap', group.by = "DF.classifications_0.25_0.3_540")

# number of singlets and doublets
table(sen_pre.seurat.filtered@meta.data$DF.classifications_0.25_0.3_540)

idx <- which(sen_pre.seurat.filtered$DF.classifications_0.25_0.3_540 == 'Doublet')
n_d_repop2 = length(idx)
sen_pre.seurat.filtered_doublet <- sen_pre.seurat.filtered[,idx]
#table(sen_pre.seurat.filtered_doublet@meta.data$DF.classifications_0.25_0.28_370)
cells.doublet <- colnames(sen_pre.seurat.filtered_doublet)

idx_d <- which(colnames(t47d_repop_2) %in% cells.doublet)
t47d_repop_2_nodoublets <- t47d_repop_2[,-idx_d]
t47d_repop_2_nodoublets

# Doublet statistic


d_p_ctr1 = ncol(ctr_1_nodoublets) / ncol(ctr_1)
d_p_ctr2 = ncol(ctr_2_nodoublets) / ncol(ctr_2)
d_p_sen1 = ncol(t47d_tis_1_nodoublets) / ncol(t47d_tis_1)
d_p_sen2 = ncol(t47d_tis_2_nodoublets) / ncol(t47d_tis_2)
d_p_repop1 = ncol(t47d_repop_1_nodoublets) / ncol(t47d_repop_1)
d_p_repop2 = ncol(t47d_repop_2_nodoublets) / ncol(t47d_repop_2)

df_doublet_stat = data.frame("sample" = c("ctr1", "ctr2", "sen1", "sen2", "repop1", "repop2"), 
                             "Percentage of singulets" = c(d_p_ctr1, d_p_ctr2,d_p_sen1, d_p_sen2, d_p_repop1, d_p_repop2))
df_doublet_stat$Percentage.of.singulets = as.numeric(df_doublet_stat$Percentage.of.singulets)
df_doublet_stat$Percentage.of.singulets = round(df_doublet_stat$Percentage.of.singulets,3)

ggplot(data=df_doublet_stat, aes(x=sample, y=Percentage.of.singulets)) +
  geom_bar(stat="identity", color="blue", fill="lightblue")+
  geom_text(aes(label=Percentage.of.singulets), vjust=1.6, color="black", size=3.5)+
  theme_minimal()



# Merge the data into one proj file



t47d_proj <- merge(ctr_1_nodoublets, y = c(ctr_2_nodoublets, t47d_tis_1_nodoublets, t47d_tis_2_nodoublets, t47d_repop_1_nodoublets, t47d_repop_2_nodoublets), add.cell.ids = c("T47D_CTR_1", "T47D_CTR_2", "T47D_TIS_1", "T47D_TIS_2","T47D_REPOP_1", "T47D_REPOP_2"), project = "t47d")


# QC

#Michochondrial genes are useful indicators of cell state.

t47d_proj[["percent.mt"]] <- PercentageFeatureSet(t47d_proj, pattern = "^MT-")


t47d_proj[["percent.rb"]] <- PercentageFeatureSet(t47d_proj, pattern = "^RP[SL]")



VlnPlot(t47d_proj, features = c("nFeature_RNA"), ncol = 1, pt.size = 0.1) & 
  theme(plot.title = element_text(size=10))

VlnPlot(t47d_proj,features = c("nCount_RNA"),ncol = 1,pt.size = 0.1) & 
  theme(plot.title = element_text(size=10))

VlnPlot(t47d_proj, features = c("percent.mt"),ncol = 1,pt.size = 0.1) & 
  theme(plot.title = element_text(size=10))

VlnPlot(t47d_proj, features = c("percent.rb"),ncol = 1,pt.size = 0.1) & 
  theme(plot.title = element_text(size=10))


FeatureScatter(t47d_proj, feature1 = "nCount_RNA", feature2 = "percent.mt")

FeatureScatter(t47d_proj, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")

FeatureScatter(t47d_proj, feature1 = "percent.rb", feature2 = "percent.mt")


# Filtering step

t47d_proj_filtered <- subset(t47d_proj, subset = nFeature_RNA > 2000 & nCount_RNA > 4000 & nCount_RNA < 30000 & percent.mt < 10)

# Save

saveRDS(t47d_proj_filtered, "t47d_filtered.Rds")
